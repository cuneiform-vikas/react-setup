/*--- Webkit ---*/
@mixin prefix($property, $parameters) {
  @each $prefix in -webkit-, -moz-, -ms-, -o-, "" {
    #{$prefix}#{$property}: $parameters;
  }
}

/*--- Media Query ---*/
@mixin responsive($media) {
  @if $media == xl {
    @media only screen and (max-width: $xl) {
      @content;
    }
  } @else if $media == xxl {
    @media only screen and (max-width: $xxl) {
      @content;
    }
  } @else if $media == xxxl {
    @media only screen and (max-width: $xxxl) {
      @content;
    }
  } @else if $media == lg {
    @media only screen and (max-width: $lg) {
      @content;
    }
  } @else if $media == md {
    @media only screen and (max-width: $md) {
      @content;
    }
  } @else if $media == sm {
    @media only screen and (max-width: $sm) {
      @content;
    }
  } @else if $media == xs {
    @media only screen and (max-width: $xs) {
      @content;
    }
  }
}

@mixin grid($columns, $gap: 20px) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

$sizes: 12;

@mixin padding-classes {
  @for $i from 1 through $sizes {
    $padding: $i * 0.25rem;
    /* padding #{$padding} */
    .p#{$i} {padding: $padding;}
    .pl#{$i} {padding-left: $padding;}
    .pr#{$i} {padding-right: $padding;}
    .pt#{$i} {padding-top: $padding;}
    .pb#{$i} {padding-bottom: $padding;}
    .px#{$i} {padding-left: $padding; padding-right: $padding;}
    .py#{$i} {padding-top: $padding; padding-bottom: $padding;}
  }
}

@include padding-classes;


